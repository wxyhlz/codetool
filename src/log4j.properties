#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL   
#%r 输出自应用启动到输出该log信息耗费的毫秒数   
#%c 输出所属的类目，通常就是所在类的全名   
#%t 输出产生该日志事件的线程名   
#%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”   
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似： 2002年10月18日 22：10：28，921   
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)   
  
#log4j提供4种布局.   
#org.apache.log4j.HTMLLayout（以HTML表格形式布局）  
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），  
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），  
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息  
  
  
#log4j中有五级logger 输出级别  
#FATAL 0   
#ERROR 3   
#WARN 4   
#INFO 6   
#DEBUG 7  
  
#日志输出级别  
log4j.rootLogger=INFO,A1,R  
  
#设置A1的日志输出控制台  
log4j.appender.A1=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布局  
log4j.appender.A1.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
#log4j.appender.A1.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH:mm:ss}]#%l %t  %m %n    
log4j.appender.A1.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R.File=${catalina.base}/logs/cssys/cssys.log  
#设置R的日志最大限制  
log4j.appender.R.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n    


log4j.logger.basBP=DEBUG,A5,R5

#设置A1的日志输出控制台  
log4j.appender.A5=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布局  
log4j.appender.A5.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
#log4j.appender.A1.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH:mm:ss}]#%l %t  %m %n    
log4j.appender.A5.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R5=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R5.File=${catalina.base}/logs/cssys/basbp.log  
#设置R的日志最大限制  
log4j.appender.R5.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R5.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R5.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R5.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n    



log4j.logger.DAO=DEBUG,A6,R6

#设置A1的日志输出控制台  
log4j.appender.A6=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布局  
log4j.appender.A6.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A6.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R6=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R6.File=${catalina.base}/logs/cssys/dao.log  
#设置R的日志最大限制  
log4j.appender.R6.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R6.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R6.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R6.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n   


log4j.logger.action=DEBUG,A7,R7

#设置A1的日志输出控制台  
log4j.appender.A7=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布局  
log4j.appender.A7.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
#log4j.appender.A1.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH:mm:ss}]#%l %t  %m %n    
log4j.appender.A7.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R7=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R7.File=${catalina.base}/logs/cssys/action.log  
#设置R的日志最大限制  
log4j.appender.R7.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R7.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R7.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R7.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n   


log4j.logger.service=DEBUG,A8,R8

#设置A1的日志输出控制台  
log4j.appender.A8=org.apache.log4j.ConsoleAppender  
# A1 使用的输出布局  
log4j.appender.A8.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
#log4j.appender.A1.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH:mm:ss}]#%l %t  %m %n    
log4j.appender.A8.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R的日志输出控制台  
log4j.appender.R8=org.apache.log4j.RollingFileAppender  
#设置R的输出日志  
log4j.appender.R8.File=${catalina.base}/logs/cssys/service.log  
#设置R的日志最大限制  
log4j.appender.R8.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R8.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R8.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R8.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n

#函数工厂  
log4j.logger.FunctionFactory=DEBUG,R9

#设置A9的日志输出控制台  
log4j.appender.A9=org.apache.log4j.ConsoleAppender  
# A9 使用的输出布局  
log4j.appender.A9.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A9.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R9的日志输出控制台  
log4j.appender.R9=org.apache.log4j.RollingFileAppender  
#设置R9的输出日志  
log4j.appender.R9.File=${catalina.base}/logs/cssys/functionfactory.log  
#设置R9的日志最大限制  
log4j.appender.R9.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R9.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R9.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R9.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n

#函数 
log4j.logger.Function=DEBUG,R10

#设置A10的日志输出控制台  
log4j.appender.A10=org.apache.log4j.ConsoleAppender  
# A10 使用的输出布局  
log4j.appender.A10.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A10.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R10的日志输出控制台  
log4j.appender.R10=org.apache.log4j.RollingFileAppender  
#设置R10的输出日志  
log4j.appender.R10.File=${catalina.base}/logs/cssys/function.log  
#设置R10的日志最大限制  
log4j.appender.R10.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R10.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R10.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R10.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n

#字典数据工厂
log4j.logger.DictDataFactory=DEBUG,R11

#设置A11的日志输出控制台  
log4j.appender.A11=org.apache.log4j.ConsoleAppender  
# A11 使用的输出布局  
log4j.appender.A11.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.A11.layout.ConversionPattern=[%p]\# %m %n    
  
#设置R11的日志输出控制台  
log4j.appender.R11=org.apache.log4j.RollingFileAppender  
#设置R11的输出日志  
log4j.appender.R11.File=${catalina.base}/logs/cssys/dictdatafactory.log  
#设置R11的日志最大限制  
log4j.appender.R11.MaxFileSize= 1024KB  
# 最多只保存一个备份文件  
log4j.appender.R11.MaxBackupIndex=20  
#设置使用灵活布局  
log4j.appender.R11.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式 具体查看log4j javadoc org.apache.log4j.PatternLayout   
log4j.appender.R11.layout.ConversionPattern=[%p] [%d{yyyyMMMdd  HH\:mm\:ss}]\#%l %t  %m %n


#ibatis的配置
log4j.logger.com.ibatis=ERROR
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=ERROR
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=ERROR
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=ERROR
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG


















#log4j.rootLogger=DEBUG, stdout
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%c{1}- %m%n
#log4j.logger.java.sql.PreparedStatement=DEBUG

#log4j.logger.system=DEBUG,systemApp
#log4j.appender.systemApp=org.apache.log4j.RollingFileAppender
#log4j.appender.systemApp.File=c:/chanjetLog/system_log.txt
#log4j.appender.systemApp.MaxFileSize=5120KB
#log4j.appender.systemApp.MaxBackupIndex=100
#log4j.appender.systemApp.layout=org.apache.log4j.PatternLayout
#log4j.appender.systemApp.layout.ConversionPattern= %d [%c:%L] - %m%n

##Exception out to file
#log4j.logger.exception=ERROR,exceptionApp
#log4j.appender.exceptionApp=org.apache.log4j.RollingFileAppender
#log4j.appender.exceptionApp.File=c:/chanjetLog/exception_log.txt
#log4j.appender.exceptionApp.MaxFileSize=5120KB
#log4j.appender.exceptionApp.MaxBackupIndex=100
#log4j.appender.exceptionApp.layout=org.apache.log4j.PatternLayout
#log4j.appender.exceptionApp.layout.ConversionPattern= %d [%c:%L] - %m%n




##Exception out to database
##log4j.logger.exceptiontoDB=ERROR,exceptiontoDBApp
##log4j.appender.exceptiontoDBApp=org.apache.log4j.jdbc.JDBCAppender
##log4j.appender.exceptiontoDBApp.URL=jdbc:oracle:thin:@10.1.44.25:1521:orcl
##log4j.appender.exceptiontoDBApp.driver=oracle.jdbc.driver.OracleDriver
##log4j.appender.exceptiontoDBApp.user=db_tax
##log4j.appender.exceptiontoDBApp.password=db_tax
##log4j.appender.exceptiontoDBApp.sql=INSERT INTO UT_QS_WH_YCXX(YC_XH,YC_RQ,YCDJ_DM,YCXX_BZ)VALUES(SEQ_UT_QS_WH_YCXX.nextval,'%d{yyyy-MM-dd HH:mm:ss}','%p','%m')
##log4j.appender.exceptiontoDBApp.layout=org.apache.log4j.PatternLayout
##log4j.appender.exceptiontoDBApp.layout.ConversionPattern=%m